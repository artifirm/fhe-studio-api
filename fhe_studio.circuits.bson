{"_id":{"$oid":"65201a737b2b7b6f13517593"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<6>) -> !FHE.eint<6> {\n    %c42_i7 = arith.constant 42 : i7\n    %0 = \"FHE.add_eint_int\"(%arg0, %c42_i7) : (!FHE.eint<6>, i7) -> !FHE.eint<6>\n    return %0 : !FHE.eint<6>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":6},\"secretKeyID\":0,\"variance\":3.9414694521645414e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":6}}],\"keyswitchKeys\":[],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":6},\"secretKeyID\":0,\"variance\":3.9414694521645414e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":6}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":512}]}","polynomial_size":{"$numberInt":"0"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"\n@fhe.compiler({\"x\": \"encrypted\"})\ndef circuit(x):\n    return x + 42\n\ninputset = range(10)","name":"My First Circuit","description":"This program takes an encrypted value and adds 42 to it","is_private":false,"created_time":{"$date":{"$numberLong":"1696726666468"}},"deleted":false,"complexity":{"$numberInt":"512"},"is_published":true}
{"_id":{"$oid":"65203562ff956a2c8e3a1d62"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<6>, %arg1: !FHE.eint<6>) -> !FHE.eint<6> {\n    %0 = \"FHE.add_eint\"(%arg0, %arg1) : (!FHE.eint<6>, !FHE.eint<6>) -> !FHE.eint<6>\n    %c42_i7 = arith.constant 42 : i7\n    %1 = \"FHE.add_eint_int\"(%0, %c42_i7) : (!FHE.eint<6>, i7) -> !FHE.eint<6>\n    return %1 : !FHE.eint<6>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":6},\"secretKeyID\":0,\"variance\":3.7987760643644811e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":6}},{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":6},\"secretKeyID\":0,\"variance\":3.7987760643644811e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":6}}],\"keyswitchKeys\":[],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":6},\"secretKeyID\":0,\"variance\":3.7987760643644811e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":6}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":513}]}","polynomial_size":{"$numberInt":"0"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"@fhe.compiler({\"x\": \"encrypted\", \"y\": \"encrypted\"})\ndef circuit(x,y):\n    return x + y + 42\n\ninputset = [(1,1), (5,5), (10,10)]","name":"Multiple Input Parameters","description":"This circuit has 2 input parameters: \"x\": \"encrypted\", \"y\": \"encrypted\"","is_private":false,"created_time":{"$date":{"$numberLong":"1696726675359"}},"deleted":false,"complexity":{"$numberInt":"513"},"is_published":true}
{"_id":{"$oid":"65203590ff956a2c8e3a1d63"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<2>) -> !FHE.esint<3> {\n    %cst = arith.constant dense<[2, -1, 3, 0]> : tensor<4xi64>\n    %0 = \"FHE.apply_lookup_table\"(%arg0, %cst) : (!FHE.eint<2>, tensor<4xi64>) -> !FHE.esint<3>\n    return %0 : !FHE.esint<3>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[{\"baseLog\":15,\"glweDimension\":5,\"inputLweDimension\":672,\"inputSecretKeyID\":1,\"level\":1,\"outputSecretKeyID\":0,\"polynomialSize\":256,\"variance\":1.979445810846816e-19}],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":2},\"secretKeyID\":0,\"variance\":1.979445810846816e-19},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":2}}],\"keyswitchKeys\":[{\"baseLog\":4,\"inputSecretKeyID\":0,\"level\":3,\"outputSecretKeyID\":1,\"variance\":1.0797982869590127e-09}],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":true,\"precision\":3},\"secretKeyID\":0,\"variance\":1.979445810846816e-19},\"shape\":{\"dimensions\":[],\"sign\":true,\"size\":0,\"width\":3}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":1280},{\"dimension\":672}]}","polynomial_size":{"$numberInt":"256"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"table = fhe.LookupTable([2, -1, 3, 0])\n\n@fhe.compiler({\"x\": \"encrypted\"})\ndef circuit(x):\n    return table[x]\n\ninputset = range(4)","name":"Lookup Table ","description":"The lookup table using a list of integers","is_private":false,"created_time":{"$date":{"$numberLong":"1696726680949"}},"deleted":false,"complexity":{"$numberInt":"29944416"},"is_published":true}
{"_id":{"$oid":"65206121ff956a2c8e3a1d65"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<5>) -> !FHE.eint<1> {\n    %c21_i6 = arith.constant 21 : i6\n    %cst = arith.constant dense<[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]> : tensor<32xi64>\n    %0 = \"FHE.apply_lookup_table\"(%arg0, %cst) : (!FHE.eint<5>, tensor<32xi64>) -> !FHE.eint<1>\n    return %0 : !FHE.eint<1>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[{\"baseLog\":23,\"glweDimension\":1,\"inputLweDimension\":781,\"inputSecretKeyID\":1,\"level\":1,\"outputSecretKeyID\":0,\"polynomialSize\":2048,\"variance\":9.9409770026943975e-32}],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":5},\"secretKeyID\":0,\"variance\":9.9409770026943975e-32},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":5}}],\"keyswitchKeys\":[{\"baseLog\":3,\"inputSecretKeyID\":0,\"level\":5,\"outputSecretKeyID\":1,\"variance\":1.9398367323353079e-11}],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":1},\"secretKeyID\":0,\"variance\":9.9409770026943975e-32},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":1}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":2048},{\"dimension\":781}]}","polynomial_size":{"$numberInt":"2048"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"\n@fhe.compiler({\"x\": \"encrypted\"})\ndef circuit(x):\n    return x < 21\n\ninputset = [1, 31]","name":"Comparison Example","description":"Comparison is implemented as a Lookup Table.","is_private":false,"created_time":{"$date":{"$numberLong":"1696726686674"}},"deleted":false,"complexity":{"$numberInt":"99198195"},"is_published":true}
{"_id":{"$oid":"652069afcbeb18d9069fc86b"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<3>) -> !FHE.esint<3> {\n    %cst = arith.constant dense<[0, 35, 38, 5, -31, -40, -11, 27]> : tensor<8xi64>\n    %0 = \"FHE.apply_lookup_table\"(%arg0, %cst) : (!FHE.eint<3>, tensor<8xi64>) -> !FHE.esint<7>\n    %c10_i5 = arith.constant 10 : i5\n    %cst_0 = arith.constant dense<\"0xtensor<128xi64>\n    %1 = \"FHE.apply_lookup_table\"(%0, %cst_0) : (!FHE.esint<7>, tensor<128xi64>) -> !FHE.esint<3>\n    return %1 : !FHE.esint<3>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[{\"baseLog\":12,\"glweDimension\":3,\"inputLweDimension\":696,\"inputSecretKeyID\":1,\"level\":2,\"outputSecretKeyID\":0,\"polynomialSize\":512,\"variance\":1.573398630171941e-23},{\"baseLog\":22,\"glweDimension\":1,\"inputLweDimension\":837,\"inputSecretKeyID\":2,\"level\":1,\"outputSecretKeyID\":3,\"polynomialSize\":8192,\"variance\":4.70197740328915e-38}],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":3},\"secretKeyID\":0,\"variance\":1.573398630171941e-23},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":3}}],\"keyswitchKeys\":[{\"baseLog\":3,\"inputSecretKeyID\":0,\"level\":4,\"outputSecretKeyID\":1,\"variance\":4.456514301117425e-10},{\"baseLog\":2,\"inputSecretKeyID\":0,\"level\":9,\"outputSecretKeyID\":2,\"variance\":2.4601112272561634e-12}],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":true,\"precision\":3},\"secretKeyID\":3,\"variance\":4.70197740328915e-38},\"shape\":{\"dimensions\":[],\"sign\":true,\"size\":0,\"width\":3}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":1536},{\"dimension\":696},{\"dimension\":837},{\"dimension\":8192}]}","polynomial_size":{"$numberInt":"512"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"import numpy as np\n\n@fhe.compiler({\"x\": \"encrypted\"})\ndef circuit(x):\n    return (42 * np.sin(x)).astype(np.int64) // 10\n\ninputset = range(8)","name":"Fused table lookup","description":"As FHE works with addition and multiplication only, but we can `fuse` some operations into table lookups automatically so these lookup tables don't need to be created manually","is_private":false,"created_time":{"$date":{"$numberLong":"1696726695801"}},"deleted":false,"complexity":{"$numberInt":"497319939"},"is_published":true}
{"_id":{"$oid":"65207d2ccbeb18d9069fc86c"},"mlir":"module {\n  func.func @main(%arg0: !FHE.eint<4>, %arg1: !FHE.eint<4>) -> !FHE.eint<2> {\n    %c4_i5 = arith.constant 4 : i5\n    %0 = \"FHE.mul_eint_int\"(%arg0, %c4_i5) : (!FHE.eint<4>, i5) -> !FHE.eint<4>\n    %1 = \"FHE.add_eint\"(%0, %arg1) : (!FHE.eint<4>, !FHE.eint<4>) -> !FHE.eint<4>\n    %cst = arith.constant dense<[0, 1, 2, 3, 3, 2, 1, 0, 2, 0, 3, 1, 1, 3, 2, 0]> : tensor<16xi64>\n    %2 = \"FHE.apply_lookup_table\"(%1, %cst) : (!FHE.eint<4>, tensor<16xi64>) -> !FHE.eint<2>\n    return %2 : !FHE.eint<2>\n  }\n}","config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[{\"baseLog\":8,\"glweDimension\":1,\"inputLweDimension\":732,\"inputSecretKeyID\":1,\"level\":2,\"outputSecretKeyID\":0,\"polynomialSize\":1024,\"variance\":2.4902816380683179e-15}],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":4},\"secretKeyID\":0,\"variance\":2.4902816380683179e-15},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":4}},{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":4},\"secretKeyID\":0,\"variance\":2.4902816380683179e-15},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":4}}],\"keyswitchKeys\":[{\"baseLog\":3,\"inputSecretKeyID\":0,\"level\":4,\"outputSecretKeyID\":1,\"variance\":1.1816104144472139e-10}],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":2},\"secretKeyID\":0,\"variance\":2.4902816380683179e-15},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":2}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":1024},{\"dimension\":732}]}","polynomial_size":{"$numberInt":"1024"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"import numpy as np\n\nmulti_dimensional_table = [\n    [0, 1, 2, 3],\n    [3, 2, 1, 0],\n    [2, 0, 3, 1],\n    [1, 3, 2, 0],\n]\nflat_table = fhe.LookupTable(np.array(multi_dimensional_table).flatten())\n\n@fhe.compiler({\"x\": \"encrypted\", \"y\": \"encrypted\"})\ndef circuit(x, y):\n    packed_x_and_y = (x * (2**2)) + y\n    return flat_table[packed_x_and_y]\n\ninputset = [\n    (0, 0), (1, 1), (2, 2), (3, 3)\n]","name":"Two dimensions LookupTable","description":"This is an example of 4x4 lookup table","is_private":false,"created_time":{"$date":{"$numberLong":"1696726701016"}},"deleted":false,"complexity":{"$numberInt":"61476132"},"is_published":true}
{"_id":{"$oid":"6523580b53e2b11820a4001a"},"mlir":"module {\n  func.func @main(%arg0: tensor<2x!FHE.eint<3>>) -> !FHE.eint<3> {\n    %cst = arith.constant dense<[[1, 2]]> : tensor<1x2xi4>\n    %0 = \"FHELinalg.to_signed\"(%arg0) : (tensor<2x!FHE.eint<3>>) -> tensor<2x!FHE.esint<3>>\n    %1 = \"FHELinalg.matmul_int_eint\"(%cst, %0) : (tensor<1x2xi4>, tensor<2x!FHE.esint<3>>) -> tensor<1x!FHE.esint<3>>\n    %2 = \"FHELinalg.to_unsigned\"(%1) : (tensor<1x!FHE.esint<3>>) -> tensor<1x!FHE.eint<3>>\n    %3 = \"FHELinalg.sum\"(%2) {axes = [], keep_dims = false} : (tensor<1x!FHE.eint<3>>) -> !FHE.eint<3>\n    return %3 : !FHE.eint<3>\n  }\n}","complexity":{"$numberInt":"512"},"config":"{\"verbose\": false, \"compiler_debug_mode\": false, \"compiler_verbose_mode\": false, \"show_graph\": null, \"show_mlir\": null, \"show_optimizer\": null, \"show_statistics\": null, \"dump_artifacts_on_unexpected_failures\": true, \"enable_unsafe_features\": false, \"use_insecure_key_cache\": false, \"insecure_key_cache_location\": null, \"loop_parallelize\": true, \"dataflow_parallelize\": false, \"auto_parallelize\": false, \"jit\": false, \"p_error\": null, \"global_p_error\": null, \"auto_adjust_rounders\": false, \"single_precision\": false, \"parameter_selection_strategy\": \"multi\", \"show_progress\": false, \"progress_title\": \"\", \"progress_tag\": false, \"fhe_simulation\": false, \"fhe_execution\": true, \"comparison_strategy_preference\": [], \"bitwise_strategy_preference\": [], \"shifts_with_promotion\": true}","client_specs":"{\"bootstrapKeys\":[],\"functionName\":\"main\",\"inputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":3},\"secretKeyID\":0,\"variance\":3.9414694521645414e-07},\"shape\":{\"dimensions\":[2],\"sign\":false,\"size\":2,\"width\":3}}],\"keyswitchKeys\":[],\"outputs\":[{\"encryption\":{\"encoding\":{\"isSigned\":false,\"precision\":3},\"secretKeyID\":0,\"variance\":3.9414694521645414e-07},\"shape\":{\"dimensions\":[],\"sign\":false,\"size\":0,\"width\":3}}],\"packingKeyswitchKeys\":[],\"secretKeys\":[{\"dimension\":512}]}","polynomial_size":{"$numberInt":"0"},"sub":"104796427001204194661","email":"alextmn1@gmail.com","src":"\nimport numpy as np\na = [[1,2]]\n\n@fhe.compiler({\"x\": \"encrypted\"})\ndef circuit(x):\n    m = np.matmul(a,x)\n    return np.sum(m)\n\ninputset = [[1,2]]","name":"Matrix Multiplication Example","description":"","is_private":false,"is_published":false,"created_time":{"$date":{"$numberLong":"1696815115159"}},"deleted":false}
